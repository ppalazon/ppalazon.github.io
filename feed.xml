<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Drum on DevOps</title>
    <link>http://ppalazon.github.org</link>
    <atom:link href="http://ppalazon.github.org/feed.xml" rel="self" type="application/rss+xml" />
    <description>This is my DevOps Logbook, where I tell me how I drummed on some aspects about development and operations</description>
    <language>en-gb</language>
    <pubDate>Wed, 4 Feb 2015 16:32:55 +0100</pubDate>
    <lastBuildDate>Wed, 4 Feb 2015 16:32:55 +0100</lastBuildDate>

    <item>
      <title>Rendering engine missing</title>
      <link>http://ppalazon.github.orgblog/2015/2013-02-26-JAXB-marsharll-unmarshall.html</link>
      <pubDate>Wed, 4 Feb 2015 16:32:55 +0100</pubDate>
      <guid isPermaLink="false">blog/2015/2013-02-26-JAXB-marsharll-unmarshall.html</guid>
      	<description>
	The markup engine [org.jbake.parser.MarkdownEngine] for [/home/ppalazon/workspace/documentation/blog/src/jbake/content/blog/2015/2013-02-26-JAXB-marsharll-unmarshall.md] couldn&apos;t be loaded
	</description>
    </item>
    <item>
      <title>Rendering engine missing</title>
      <link>http://ppalazon.github.orgblog/2015/2013-02-20-SNMP-Cacti.html</link>
      <pubDate>Wed, 4 Feb 2015 16:32:55 +0100</pubDate>
      <guid isPermaLink="false">blog/2015/2013-02-20-SNMP-Cacti.html</guid>
      	<description>
	The markup engine [org.jbake.parser.MarkdownEngine] for [/home/ppalazon/workspace/documentation/blog/src/jbake/content/blog/2015/2013-02-20-SNMP-Cacti.md] couldn&apos;t be loaded
	</description>
    </item>
    <item>
      <title>Guake Base 16 color</title>
      <link>http://ppalazon.github.orgblog/2015/guake-color-base-16.html</link>
      <pubDate>Wed, 7 Jan 2015 00:00:00 +0100</pubDate>
      <guid isPermaLink="false">blog/2015/guake-color-base-16.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Base16 provides carefully chosen syntax highlighting and a default set of sixteen colors suitable for a wide range of applications. Base16 is both a color scheme and a template.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://camo.githubusercontent.com/e265d55a7795c2f3c504842cc7b4e5e67e4db64f/68747470733a2f2f7261772e6769746875622e636f6d2f63687269736b656d70736f6e2f6261736531362f6d61737465722f6261736531362d64656661756c742e706e67&quot; alt=&quot;Base 16&apos;s default color scheme&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With &lt;a href=&quot;https://github.com/chriskempson/base16-builder&quot;&gt;Base 16 builder&lt;/a&gt; you could create guake template and set-up for it&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone git@github.com:chriskempson/base16-builder.git
cd base16-builder
./base16
chmod +x ./output/guake/*.sh&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Apply with prefered template executing any shell script under &lt;code&gt;./output/guake/&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;./output/guake/base16-ocean.dark.sh&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;img/post/guake-base-16-example.png&quot; alt=&quot;Guake terminal with Base 16 Ocean Dark template&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/chriskempson/base16&quot;&gt;Base 16&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/chriskempson/base16-builder&quot;&gt;Base 16 Builder&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Tab name on Guake</title>
      <link>http://ppalazon.github.orgblog/2015/guake-tab-name.html</link>
      <pubDate>Tue, 6 Jan 2015 00:00:00 +0100</pubDate>
      <guid isPermaLink="false">blog/2015/guake-tab-name.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you use guake terminal with so many tabs, you will found a problem if guake rename you tab name automatically. Guake terminal rename tab name
with user@host and directory path&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;img/post/guake-tab-name-automatic.png&quot; alt=&quot;Guake change name automatically&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can resolve it, with a gnome configuration property. Open the terminal and write&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;gconftool-2 --set /apps/guake/general/use_vte_titles --type boolean false&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Then, guake let fixed the terminal name&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;img/post/guake-tab-name-fixed-name.png&quot; alt=&quot;Guake with fixed terminal names&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://bbs.archlinux.org/viewtopic.php?id=143201&quot;&gt;Reverting Guake terminal tab names back to &apos;Terminal #&apos;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Test GraphViz</title>
      <link>http://ppalazon.github.orgblog/2014/test-graphviz.html</link>
      <pubDate>Fri, 9 May 2014 00:00:00 +0200</pubDate>
      <guid isPermaLink="false">blog/2014/test-graphviz.html</guid>
      	<description>
	&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;digraph G { rankdir=LR; Graphviz-&amp;gt;AsciiDoc-&amp;gt;HTML}&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Java configuration pattern</title>
      <link>http://ppalazon.github.orgblog/2013/java-app-configuration.html</link>
      <pubDate>Fri, 25 Jan 2013 00:00:00 +0100</pubDate>
      <guid isPermaLink="false">blog/2013/java-app-configuration.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Sometimes, we&amp;#8217;re developing applications that need some run-time
configuration. Those configurations depends of run-time environments.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;All we need is:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Properties file (*.properties)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://commons.apache.org/configuration/&quot;&gt;commons-configuration-web&lt;/a&gt; dependency&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Factory class&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Configuration class&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;dev_configuration_framework&quot;&gt;Dev configuration framework&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;factory_class_singleton&quot;&gt;Factory Class (Singleton)&lt;/h3&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;public class ConfigFactory
{
    private static ConfigFactory configFactory;
    private Config defaultConfig;

    private ConfigFactory()
    {
        try
        {
            // Default configuration with properties files
            Configuration configuration = new
                PropertiesConfiguration(&quot;configuration.properties&quot;);
            this.defaultConfig = new Config(configuration);
        }
        catch (ConfigurationException e)
        {
            e.printStackTrace();
        }

    }

    public static ConfigFactory getInstance()
    {
        if (configFactory == null)
            configFactory = new configFactory();
        return configFactory;
    }

    public Config createConfig(Configuration configuration)
    {
        return new Config(configuration);
    }

    public Config getDefaultConfig()
    {
        return defaultConfig;
    }

    public void setDefaultConfig(Config defaultConfig)
    {
        this.defaultConfig = defaultConfig;
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;config_class&quot;&gt;Config class&lt;/h3&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;public class Config
{
    private Configuration configuration;

    public Config(Configuration configuration)
    {
        this.configuration = configuration;
    }

    public Boolean isActiveFeatureOne()
    {
        return this.configuration.getBoolean(&quot;feature.one&quot;);
    }

    public String getHostHttpUrl()
    {
        return this.configuration.getBoolean(&quot;host.http.url&quot;);
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;properties_file_configuration_properties&quot;&gt;Properties file (configuration.properties)&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commons-configuration 1.9 search &lt;a href=&quot;http://commons.apache.org/configuration/userguide/howto_properties.html#Properties_files&quot;&gt;property-files&lt;/a&gt; on:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;in the current directory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;in the user home directory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;in the classpath&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Example file:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-properties&quot; data-lang=&quot;properties&quot;&gt;feature.one=true
host.http.url=http://www.google.com&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;how_to_use_it&quot;&gt;How-to use it&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;use_default_configuration&quot;&gt;Use default configuration&lt;/h3&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;Config appConfig = ConfigFactory.getInstance().getDefaultConfig();
if(appConfig.isActiveFeatureOne())
{
   ...
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;create_another_configuration_with_another_config_file&quot;&gt;Create another configuration, with another config file&lt;/h3&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;XMLConfiguration config = new XMLConfiguration(&quot;configuration.xml&quot;);
Config appConfig = ConfigFactory.getInstance().createConfig(config);
if(appConfig.isActiveFeatureOne())
{
   ...
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;create_another_configuration_and_set_up_as_default&quot;&gt;Create another configuration, and set-up as default&lt;/h3&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;XMLConfiguration config = new XMLConfiguration(&quot;configuration.xml&quot;);
ConfigFactory.getInstance().setDefaultConfig(config);
...
Config appConfig = ConfigFactory.getInstance().getDefaultConfig();
if(appConfig.isActiveFeatureOne())
{
   ...
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Multi-environment maven war generation</title>
      <link>http://ppalazon.github.orgblog/2013/devops-with-maven-war.html</link>
      <pubDate>Thu, 24 Jan 2013 00:00:00 +0100</pubDate>
      <guid isPermaLink="false">blog/2013/devops-with-maven-war.html</guid>
      	<description>
	&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;d like to let you an Maven snippet code for configure WAR project for
different environments. Sometimes, we&amp;#8217;re developing in a dev
environment, but this project we&amp;#8217;d like to run in another environments
(cloud, server, etc).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is a configuration profile&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint highlight&quot;&gt;&lt;code class=&quot;language-maven&quot; data-lang=&quot;maven&quot;&gt;&amp;lt;profile&amp;gt;
    &amp;lt;id&amp;gt;prog&amp;lt;/id&amp;gt;
    &amp;lt;activation&amp;gt;
        &amp;lt;activeByDefault&amp;gt;true&amp;lt;/activeByDefault&amp;gt;
    &amp;lt;/activation&amp;gt;
    &amp;lt;properties&amp;gt;
        &amp;lt;!-- There are 3 availabled (dev,nuvol,nuvolbeta), ie: mvn
            clean package -Dprofile=nuvol --&amp;gt;
        &amp;lt;env&amp;gt;dev&amp;lt;/env&amp;gt;
    &amp;lt;/properties&amp;gt;
    &amp;lt;build&amp;gt;
        &amp;lt;resources&amp;gt;
            &amp;lt;resource&amp;gt;
                &amp;lt;directory&amp;gt;src/main/resources/common&amp;lt;/directory&amp;gt;
            &amp;lt;/resource&amp;gt;
            &amp;lt;resource&amp;gt;
                &amp;lt;directory&amp;gt;src/main/resources/${env}&amp;lt;/directory&amp;gt;
            &amp;lt;/resource&amp;gt;
        &amp;lt;/resources&amp;gt;
        &amp;lt;plugins&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-war-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;2.2&amp;lt;/version&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;classifier&amp;gt;${env}&amp;lt;/classifier&amp;gt;
                    &amp;lt;webResources&amp;gt;
                        &amp;lt;resource&amp;gt;
                            &amp;lt;directory&amp;gt;src/main/webinf/common&amp;lt;/directory&amp;gt;
                            &amp;lt;targetPath&amp;gt;WEB-INF&amp;lt;/targetPath&amp;gt;
                            &amp;lt;includes&amp;gt;
                                &amp;lt;include&amp;gt;**/*&amp;lt;/include&amp;gt;
                            &amp;lt;/includes&amp;gt;
                        &amp;lt;/resource&amp;gt;
                        &amp;lt;resource&amp;gt;
                            &amp;lt;directory&amp;gt;src/main/webinf/${env}&amp;lt;/directory&amp;gt;
                            &amp;lt;targetPath&amp;gt;WEB-INF&amp;lt;/targetPath&amp;gt;
                            &amp;lt;includes&amp;gt;
                                &amp;lt;include&amp;gt;**/*&amp;lt;/include&amp;gt;
                            &amp;lt;/includes&amp;gt;
                        &amp;lt;/resource&amp;gt;
                    &amp;lt;/webResources&amp;gt;
                &amp;lt;/configuration&amp;gt;
            &amp;lt;/plugin&amp;gt;
        &amp;lt;/plugins&amp;gt;
    &amp;lt;/build&amp;gt;
&amp;lt;/profile&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Features:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Profile active by default (mvn clean package, will use dev environment)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Change environment variable with -Denv=dev (java runtime option)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All WEB-INF will be on src/main/webinf/&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;common: WEB-INF common files for all environment (DRY) : (Mandatory)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;dev: WEB-INF files for dev environment : (Mandatory)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;another_env_name: WEB-INF files for any environment if you want : (Optional)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All resources files (java resources) on src/main/resources&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Same philosophy than WEB-INF configuration folder&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Caution:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This will ignore WEB-INF file on webapp/WEB-INF&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to import this project on Eclipse, you will add WEB-INF by han. (Project Properties&amp;#8594;Deployment Assembly)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
	</description>
    </item>

  </channel>
</rss>
